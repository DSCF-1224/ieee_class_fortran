var tipuesearch = {"pages":[{"title":" ieee_class_fortran ","text":"ieee_class_fortran","tags":"home","url":"index.html"},{"title":"is_ieee_either_zero – ieee_class_fortran","text":"public interface is_ieee_either_zero Checks whether x is either ieee_negative_zero or ieee_positive_zero Module Procedures private pure elemental function is_ieee_either_zero_real32(x) result(status) Checks whether x is either ieee_negative_zero or ieee_positive_zero Arguments Type Intent Optional Attributes Name real(kind=real32), intent(in) :: x Return Value logical private pure elemental function is_ieee_either_zero_real64(x) result(status) Checks whether x is either ieee_negative_zero or ieee_positive_zero Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: x Return Value logical private pure elemental function is_ieee_either_zero_real128(x) result(status) Checks whether x is either ieee_negative_zero or ieee_positive_zero Arguments Type Intent Optional Attributes Name real(kind=real128), intent(in) :: x Return Value logical","tags":"","url":"interface/is_ieee_either_zero.html"},{"title":"is_ieee_negative_inf – ieee_class_fortran","text":"public interface is_ieee_negative_inf Checks whether x is ieee_negative_inf Module Procedures private pure elemental function is_ieee_negative_inf_real32(x) result(status) Checks whether x is ieee_negative_inf Arguments Type Intent Optional Attributes Name real(kind=real32), intent(in) :: x Return Value logical private pure elemental function is_ieee_negative_inf_real64(x) result(status) Checks whether x is ieee_negative_inf Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: x Return Value logical private pure elemental function is_ieee_negative_inf_real128(x) result(status) Checks whether x is ieee_negative_inf Arguments Type Intent Optional Attributes Name real(kind=real128), intent(in) :: x Return Value logical","tags":"","url":"interface/is_ieee_negative_inf.html"},{"title":"is_ieee_negative_zero – ieee_class_fortran","text":"public interface is_ieee_negative_zero Checks whether x is ieee_negative_zero Module Procedures private pure elemental function is_ieee_negative_zero_real32(x) result(status) Checks whether x is ieee_negative_zero Arguments Type Intent Optional Attributes Name real(kind=real32), intent(in) :: x Return Value logical private pure elemental function is_ieee_negative_zero_real64(x) result(status) Checks whether x is ieee_negative_zero Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: x Return Value logical private pure elemental function is_ieee_negative_zero_real128(x) result(status) Checks whether x is ieee_negative_zero Arguments Type Intent Optional Attributes Name real(kind=real128), intent(in) :: x Return Value logical","tags":"","url":"interface/is_ieee_negative_zero.html"},{"title":"is_ieee_positive_inf – ieee_class_fortran","text":"public interface is_ieee_positive_inf Checks whether x is ieee_positive_inf Module Procedures private pure elemental function is_ieee_positive_inf_real32(x) result(status) Checks whether x is ieee_positive_inf Arguments Type Intent Optional Attributes Name real(kind=real32), intent(in) :: x Return Value logical private pure elemental function is_ieee_positive_inf_real64(x) result(status) Checks whether x is ieee_positive_inf Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: x Return Value logical private pure elemental function is_ieee_positive_inf_real128(x) result(status) Checks whether x is ieee_positive_inf Arguments Type Intent Optional Attributes Name real(kind=real128), intent(in) :: x Return Value logical","tags":"","url":"interface/is_ieee_positive_inf.html"},{"title":"is_ieee_positive_zero – ieee_class_fortran","text":"public interface is_ieee_positive_zero Checks whether x is ieee_positive_zero Module Procedures private pure elemental function is_ieee_positive_zero_real32(x) result(status) Checks whether x is ieee_positive_zero Arguments Type Intent Optional Attributes Name real(kind=real32), intent(in) :: x Return Value logical private pure elemental function is_ieee_positive_zero_real64(x) result(status) Checks whether x is ieee_positive_zero Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: x Return Value logical private pure elemental function is_ieee_positive_zero_real128(x) result(status) Checks whether x is ieee_positive_zero Arguments Type Intent Optional Attributes Name real(kind=real128), intent(in) :: x Return Value logical","tags":"","url":"interface/is_ieee_positive_zero.html"},{"title":"is_ieee_quiet_nan – ieee_class_fortran","text":"public interface is_ieee_quiet_nan Checks whether x is ieee_quiet_nan Module Procedures private pure elemental function is_ieee_quiet_nan_real32(x) result(status) Checks whether x is ieee_quiet_nan Arguments Type Intent Optional Attributes Name real(kind=real32), intent(in) :: x Return Value logical private pure elemental function is_ieee_quiet_nan_real64(x) result(status) Checks whether x is ieee_quiet_nan Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: x Return Value logical private pure elemental function is_ieee_quiet_nan_real128(x) result(status) Checks whether x is ieee_quiet_nan Arguments Type Intent Optional Attributes Name real(kind=real128), intent(in) :: x Return Value logical","tags":"","url":"interface/is_ieee_quiet_nan.html"},{"title":"is_ieee_signaling_nan – ieee_class_fortran","text":"public interface is_ieee_signaling_nan Checks whether x is ieee_signaling_nan Module Procedures private pure elemental function is_ieee_signaling_nan_real32(x) result(status) Checks whether x is ieee_signaling_nan Arguments Type Intent Optional Attributes Name real(kind=real32), intent(in) :: x Return Value logical private pure elemental function is_ieee_signaling_nan_real64(x) result(status) Checks whether x is ieee_signaling_nan Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: x Return Value logical private pure elemental function is_ieee_signaling_nan_real128(x) result(status) Checks whether x is ieee_signaling_nan Arguments Type Intent Optional Attributes Name real(kind=real128), intent(in) :: x Return Value logical","tags":"","url":"interface/is_ieee_signaling_nan.html"},{"title":"set_ieee_negative_inf – ieee_class_fortran","text":"public interface set_ieee_negative_inf Substitute ieee_negative_inf to x using ieee_value Module Procedures private pure elemental subroutine set_ieee_negative_inf_real32(x) Substitute ieee_negative_inf to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real32), intent(inout) :: x private pure elemental subroutine set_ieee_negative_inf_real64(x) Substitute ieee_negative_inf to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real64), intent(inout) :: x private pure elemental subroutine set_ieee_negative_inf_real128(x) Substitute ieee_negative_inf to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real128), intent(inout) :: x","tags":"","url":"interface/set_ieee_negative_inf.html"},{"title":"set_ieee_negative_zero – ieee_class_fortran","text":"public interface set_ieee_negative_zero Substitute ieee_negative_zero to x using ieee_value Module Procedures private pure elemental subroutine set_ieee_negative_zero_real32(x) Substitute ieee_negative_zero to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real32), intent(inout) :: x private pure elemental subroutine set_ieee_negative_zero_real64(x) Substitute ieee_negative_zero to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real64), intent(inout) :: x private pure elemental subroutine set_ieee_negative_zero_real128(x) Substitute ieee_negative_zero to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real128), intent(inout) :: x","tags":"","url":"interface/set_ieee_negative_zero.html"},{"title":"set_ieee_positive_inf – ieee_class_fortran","text":"public interface set_ieee_positive_inf Substitute ieee_positive_inf to x using ieee_value Module Procedures private pure elemental subroutine set_ieee_positive_inf_real32(x) Substitute ieee_positive_inf to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real32), intent(inout) :: x private pure elemental subroutine set_ieee_positive_inf_real64(x) Substitute ieee_positive_inf to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real64), intent(inout) :: x private pure elemental subroutine set_ieee_positive_inf_real128(x) Substitute ieee_positive_inf to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real128), intent(inout) :: x","tags":"","url":"interface/set_ieee_positive_inf.html"},{"title":"set_ieee_positive_zero – ieee_class_fortran","text":"public interface set_ieee_positive_zero Substitute ieee_positive_zero to x using ieee_value Module Procedures private pure elemental subroutine set_ieee_positive_zero_real32(x) Substitute ieee_positive_zero to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real32), intent(inout) :: x private pure elemental subroutine set_ieee_positive_zero_real64(x) Substitute ieee_positive_zero to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real64), intent(inout) :: x private pure elemental subroutine set_ieee_positive_zero_real128(x) Substitute ieee_positive_zero to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real128), intent(inout) :: x","tags":"","url":"interface/set_ieee_positive_zero.html"},{"title":"set_ieee_quiet_nan – ieee_class_fortran","text":"public interface set_ieee_quiet_nan Substitute ieee_quiet_nan to x using ieee_value Module Procedures private pure elemental subroutine set_ieee_quiet_nan_real32(x) Substitute ieee_quiet_nan to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real32), intent(inout) :: x private pure elemental subroutine set_ieee_quiet_nan_real64(x) Substitute ieee_quiet_nan to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real64), intent(inout) :: x private pure elemental subroutine set_ieee_quiet_nan_real128(x) Substitute ieee_quiet_nan to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real128), intent(inout) :: x","tags":"","url":"interface/set_ieee_quiet_nan.html"},{"title":"set_ieee_signaling_nan – ieee_class_fortran","text":"public interface set_ieee_signaling_nan Substitute ieee_signaling_nan to x using ieee_value Module Procedures private pure elemental subroutine set_ieee_signaling_nan_real32(x) Substitute ieee_signaling_nan to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real32), intent(inout) :: x private pure elemental subroutine set_ieee_signaling_nan_real64(x) Substitute ieee_signaling_nan to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real64), intent(inout) :: x private pure elemental subroutine set_ieee_signaling_nan_real128(x) Substitute ieee_signaling_nan to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real128), intent(inout) :: x","tags":"","url":"interface/set_ieee_signaling_nan.html"},{"title":"ieee_class_fortran – ieee_class_fortran","text":"Uses ieee_arithmetic iso_fortran_env Interfaces public        interface is_ieee_either_zero Checks whether x is either ieee_negative_zero or ieee_positive_zero private pure elemental function is_ieee_either_zero_real32(x) result(status) Checks whether x is either ieee_negative_zero or ieee_positive_zero Arguments Type Intent Optional Attributes Name real(kind=real32), intent(in) :: x Return Value logical private pure elemental function is_ieee_either_zero_real64(x) result(status) Checks whether x is either ieee_negative_zero or ieee_positive_zero Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: x Return Value logical private pure elemental function is_ieee_either_zero_real128(x) result(status) Checks whether x is either ieee_negative_zero or ieee_positive_zero Arguments Type Intent Optional Attributes Name real(kind=real128), intent(in) :: x Return Value logical public        interface is_ieee_negative_inf Checks whether x is ieee_negative_inf private pure elemental function is_ieee_negative_inf_real32(x) result(status) Checks whether x is ieee_negative_inf Arguments Type Intent Optional Attributes Name real(kind=real32), intent(in) :: x Return Value logical private pure elemental function is_ieee_negative_inf_real64(x) result(status) Checks whether x is ieee_negative_inf Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: x Return Value logical private pure elemental function is_ieee_negative_inf_real128(x) result(status) Checks whether x is ieee_negative_inf Arguments Type Intent Optional Attributes Name real(kind=real128), intent(in) :: x Return Value logical public        interface is_ieee_negative_zero Checks whether x is ieee_negative_zero private pure elemental function is_ieee_negative_zero_real32(x) result(status) Checks whether x is ieee_negative_zero Arguments Type Intent Optional Attributes Name real(kind=real32), intent(in) :: x Return Value logical private pure elemental function is_ieee_negative_zero_real64(x) result(status) Checks whether x is ieee_negative_zero Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: x Return Value logical private pure elemental function is_ieee_negative_zero_real128(x) result(status) Checks whether x is ieee_negative_zero Arguments Type Intent Optional Attributes Name real(kind=real128), intent(in) :: x Return Value logical public        interface is_ieee_positive_inf Checks whether x is ieee_positive_inf private pure elemental function is_ieee_positive_inf_real32(x) result(status) Checks whether x is ieee_positive_inf Arguments Type Intent Optional Attributes Name real(kind=real32), intent(in) :: x Return Value logical private pure elemental function is_ieee_positive_inf_real64(x) result(status) Checks whether x is ieee_positive_inf Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: x Return Value logical private pure elemental function is_ieee_positive_inf_real128(x) result(status) Checks whether x is ieee_positive_inf Arguments Type Intent Optional Attributes Name real(kind=real128), intent(in) :: x Return Value logical public        interface is_ieee_positive_zero Checks whether x is ieee_positive_zero private pure elemental function is_ieee_positive_zero_real32(x) result(status) Checks whether x is ieee_positive_zero Arguments Type Intent Optional Attributes Name real(kind=real32), intent(in) :: x Return Value logical private pure elemental function is_ieee_positive_zero_real64(x) result(status) Checks whether x is ieee_positive_zero Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: x Return Value logical private pure elemental function is_ieee_positive_zero_real128(x) result(status) Checks whether x is ieee_positive_zero Arguments Type Intent Optional Attributes Name real(kind=real128), intent(in) :: x Return Value logical public        interface is_ieee_quiet_nan Checks whether x is ieee_quiet_nan private pure elemental function is_ieee_quiet_nan_real32(x) result(status) Checks whether x is ieee_quiet_nan Arguments Type Intent Optional Attributes Name real(kind=real32), intent(in) :: x Return Value logical private pure elemental function is_ieee_quiet_nan_real64(x) result(status) Checks whether x is ieee_quiet_nan Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: x Return Value logical private pure elemental function is_ieee_quiet_nan_real128(x) result(status) Checks whether x is ieee_quiet_nan Arguments Type Intent Optional Attributes Name real(kind=real128), intent(in) :: x Return Value logical public        interface is_ieee_signaling_nan Checks whether x is ieee_signaling_nan private pure elemental function is_ieee_signaling_nan_real32(x) result(status) Checks whether x is ieee_signaling_nan Arguments Type Intent Optional Attributes Name real(kind=real32), intent(in) :: x Return Value logical private pure elemental function is_ieee_signaling_nan_real64(x) result(status) Checks whether x is ieee_signaling_nan Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: x Return Value logical private pure elemental function is_ieee_signaling_nan_real128(x) result(status) Checks whether x is ieee_signaling_nan Arguments Type Intent Optional Attributes Name real(kind=real128), intent(in) :: x Return Value logical public        interface set_ieee_negative_inf Substitute ieee_negative_inf to x using ieee_value private pure elemental subroutine set_ieee_negative_inf_real32(x) Substitute ieee_negative_inf to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real32), intent(inout) :: x private pure elemental subroutine set_ieee_negative_inf_real64(x) Substitute ieee_negative_inf to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real64), intent(inout) :: x private pure elemental subroutine set_ieee_negative_inf_real128(x) Substitute ieee_negative_inf to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real128), intent(inout) :: x public        interface set_ieee_negative_zero Substitute ieee_negative_zero to x using ieee_value private pure elemental subroutine set_ieee_negative_zero_real32(x) Substitute ieee_negative_zero to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real32), intent(inout) :: x private pure elemental subroutine set_ieee_negative_zero_real64(x) Substitute ieee_negative_zero to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real64), intent(inout) :: x private pure elemental subroutine set_ieee_negative_zero_real128(x) Substitute ieee_negative_zero to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real128), intent(inout) :: x public        interface set_ieee_positive_inf Substitute ieee_positive_inf to x using ieee_value private pure elemental subroutine set_ieee_positive_inf_real32(x) Substitute ieee_positive_inf to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real32), intent(inout) :: x private pure elemental subroutine set_ieee_positive_inf_real64(x) Substitute ieee_positive_inf to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real64), intent(inout) :: x private pure elemental subroutine set_ieee_positive_inf_real128(x) Substitute ieee_positive_inf to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real128), intent(inout) :: x public        interface set_ieee_positive_zero Substitute ieee_positive_zero to x using ieee_value private pure elemental subroutine set_ieee_positive_zero_real32(x) Substitute ieee_positive_zero to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real32), intent(inout) :: x private pure elemental subroutine set_ieee_positive_zero_real64(x) Substitute ieee_positive_zero to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real64), intent(inout) :: x private pure elemental subroutine set_ieee_positive_zero_real128(x) Substitute ieee_positive_zero to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real128), intent(inout) :: x public        interface set_ieee_quiet_nan Substitute ieee_quiet_nan to x using ieee_value private pure elemental subroutine set_ieee_quiet_nan_real32(x) Substitute ieee_quiet_nan to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real32), intent(inout) :: x private pure elemental subroutine set_ieee_quiet_nan_real64(x) Substitute ieee_quiet_nan to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real64), intent(inout) :: x private pure elemental subroutine set_ieee_quiet_nan_real128(x) Substitute ieee_quiet_nan to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real128), intent(inout) :: x public        interface set_ieee_signaling_nan Substitute ieee_signaling_nan to x using ieee_value private pure elemental subroutine set_ieee_signaling_nan_real32(x) Substitute ieee_signaling_nan to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real32), intent(inout) :: x private pure elemental subroutine set_ieee_signaling_nan_real64(x) Substitute ieee_signaling_nan to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real64), intent(inout) :: x private pure elemental subroutine set_ieee_signaling_nan_real128(x) Substitute ieee_signaling_nan to x using ieee_value Arguments Type Intent Optional Attributes Name real(kind=real128), intent(inout) :: x","tags":"","url":"module/ieee_class_fortran.html"},{"title":"ieee_class_fortran.f90 – ieee_class_fortran","text":"Source Code module ieee_class_fortran use , intrinsic :: iso_fortran_env , only : real32 use , intrinsic :: iso_fortran_env , only : real64 use , intrinsic :: iso_fortran_env , only : real128 use , intrinsic :: ieee_arithmetic , only : operator (. eq .) use , intrinsic :: ieee_arithmetic , only : ieee_class use , intrinsic :: ieee_arithmetic , only : ieee_negative_inf use , intrinsic :: ieee_arithmetic , only : ieee_negative_zero use , intrinsic :: ieee_arithmetic , only : ieee_positive_inf use , intrinsic :: ieee_arithmetic , only : ieee_positive_zero use , intrinsic :: ieee_arithmetic , only : ieee_quiet_nan use , intrinsic :: ieee_arithmetic , only : ieee_signaling_nan use , intrinsic :: ieee_arithmetic , only : ieee_value implicit none private public :: is_ieee_either_zero public :: is_ieee_negative_inf public :: is_ieee_negative_zero public :: is_ieee_positive_inf public :: is_ieee_positive_zero public :: is_ieee_quiet_nan public :: is_ieee_signaling_nan public :: set_ieee_negative_inf public :: set_ieee_negative_zero public :: set_ieee_positive_inf public :: set_ieee_positive_zero public :: set_ieee_quiet_nan public :: set_ieee_signaling_nan !> Checks whether `x` is either `ieee_negative_zero` or `ieee_positive_zero` interface is_ieee_either_zero module procedure :: is_ieee_either_zero_real32 module procedure :: is_ieee_either_zero_real64 module procedure :: is_ieee_either_zero_real128 end interface !> Checks whether `x` is `ieee_negative_inf` interface is_ieee_negative_inf module procedure :: is_ieee_negative_inf_real32 module procedure :: is_ieee_negative_inf_real64 module procedure :: is_ieee_negative_inf_real128 end interface !> Checks whether `x` is `ieee_negative_zero` interface is_ieee_negative_zero module procedure :: is_ieee_negative_zero_real32 module procedure :: is_ieee_negative_zero_real64 module procedure :: is_ieee_negative_zero_real128 end interface !> Checks whether `x` is `ieee_positive_inf` interface is_ieee_positive_inf module procedure :: is_ieee_positive_inf_real32 module procedure :: is_ieee_positive_inf_real64 module procedure :: is_ieee_positive_inf_real128 end interface !> Checks whether `x` is `ieee_positive_zero` interface is_ieee_positive_zero module procedure :: is_ieee_positive_zero_real32 module procedure :: is_ieee_positive_zero_real64 module procedure :: is_ieee_positive_zero_real128 end interface !> Checks whether `x` is `ieee_quiet_nan` interface is_ieee_quiet_nan module procedure :: is_ieee_quiet_nan_real32 module procedure :: is_ieee_quiet_nan_real64 module procedure :: is_ieee_quiet_nan_real128 end interface !> Checks whether `x` is `ieee_signaling_nan` interface is_ieee_signaling_nan module procedure :: is_ieee_signaling_nan_real32 module procedure :: is_ieee_signaling_nan_real64 module procedure :: is_ieee_signaling_nan_real128 end interface !> Substitute `ieee_negative_inf` to `x` using `ieee_value` interface set_ieee_negative_inf module procedure :: set_ieee_negative_inf_real32 module procedure :: set_ieee_negative_inf_real64 module procedure :: set_ieee_negative_inf_real128 end interface !> Substitute `ieee_negative_zero` to `x` using `ieee_value` interface set_ieee_negative_zero module procedure :: set_ieee_negative_zero_real32 module procedure :: set_ieee_negative_zero_real64 module procedure :: set_ieee_negative_zero_real128 end interface !> Substitute `ieee_positive_inf` to `x` using `ieee_value` interface set_ieee_positive_inf module procedure :: set_ieee_positive_inf_real32 module procedure :: set_ieee_positive_inf_real64 module procedure :: set_ieee_positive_inf_real128 end interface !> Substitute `ieee_positive_zero` to `x` using `ieee_value` interface set_ieee_positive_zero module procedure :: set_ieee_positive_zero_real32 module procedure :: set_ieee_positive_zero_real64 module procedure :: set_ieee_positive_zero_real128 end interface !> Substitute `ieee_quiet_nan` to `x` using `ieee_value` interface set_ieee_quiet_nan module procedure :: set_ieee_quiet_nan_real32 module procedure :: set_ieee_quiet_nan_real64 module procedure :: set_ieee_quiet_nan_real128 end interface !> Substitute `ieee_signaling_nan` to `x` using `ieee_value` interface set_ieee_signaling_nan module procedure :: set_ieee_signaling_nan_real32 module procedure :: set_ieee_signaling_nan_real64 module procedure :: set_ieee_signaling_nan_real128 end interface contains !> Checks whether `x` is either `ieee_negative_zero` or `ieee_positive_zero` logical pure elemental function is_ieee_either_zero_real32 ( x ) result ( status ) real ( real32 ), intent ( in ) :: x associate ( ieee_class_x => ieee_class ( x ) ) status = ( ieee_class_x . eq . ieee_negative_zero ) & ! & . or . ( ieee_class_x . eq . ieee_positive_zero ) end associate end function !> Checks whether `x` is either `ieee_negative_zero` or `ieee_positive_zero` logical pure elemental function is_ieee_either_zero_real64 ( x ) result ( status ) real ( real64 ), intent ( in ) :: x associate ( ieee_class_x => ieee_class ( x ) ) status = ( ieee_class_x . eq . ieee_negative_zero ) & ! & . or . ( ieee_class_x . eq . ieee_positive_zero ) end associate end function !> Checks whether `x` is either `ieee_negative_zero` or `ieee_positive_zero` logical pure elemental function is_ieee_either_zero_real128 ( x ) result ( status ) real ( real128 ), intent ( in ) :: x associate ( ieee_class_x => ieee_class ( x ) ) status = ( ieee_class_x . eq . ieee_negative_zero ) & ! & . or . ( ieee_class_x . eq . ieee_positive_zero ) end associate end function !> Checks whether `x` is `ieee_negative_inf` logical pure elemental function is_ieee_negative_inf_real32 ( x ) result ( status ) real ( real32 ), intent ( in ) :: x status = ieee_class ( x ) . eq . ieee_negative_inf end function !> Checks whether `x` is `ieee_negative_inf` logical pure elemental function is_ieee_negative_inf_real64 ( x ) result ( status ) real ( real64 ), intent ( in ) :: x status = ieee_class ( x ) . eq . ieee_negative_inf end function !> Checks whether `x` is `ieee_negative_inf` logical pure elemental function is_ieee_negative_inf_real128 ( x ) result ( status ) real ( real128 ), intent ( in ) :: x status = ieee_class ( x ) . eq . ieee_negative_inf end function !> Checks whether `x` is `ieee_negative_zero` logical pure elemental function is_ieee_negative_zero_real32 ( x ) result ( status ) real ( real32 ), intent ( in ) :: x status = ieee_class ( x ) . eq . ieee_negative_zero end function !> Checks whether `x` is `ieee_negative_zero` logical pure elemental function is_ieee_negative_zero_real64 ( x ) result ( status ) real ( real64 ), intent ( in ) :: x status = ieee_class ( x ) . eq . ieee_negative_zero end function !> Checks whether `x` is `ieee_negative_zero` logical pure elemental function is_ieee_negative_zero_real128 ( x ) result ( status ) real ( real128 ), intent ( in ) :: x status = ieee_class ( x ) . eq . ieee_negative_zero end function !> Checks whether `x` is `ieee_positive_inf` logical pure elemental function is_ieee_positive_inf_real32 ( x ) result ( status ) real ( real32 ), intent ( in ) :: x status = ieee_class ( x ) . eq . ieee_positive_inf end function !> Checks whether `x` is `ieee_positive_inf` logical pure elemental function is_ieee_positive_inf_real64 ( x ) result ( status ) real ( real64 ), intent ( in ) :: x status = ieee_class ( x ) . eq . ieee_positive_inf end function !> Checks whether `x` is `ieee_positive_inf` logical pure elemental function is_ieee_positive_inf_real128 ( x ) result ( status ) real ( real128 ), intent ( in ) :: x status = ieee_class ( x ) . eq . ieee_positive_inf end function !> Checks whether `x` is `ieee_positive_zero` logical pure elemental function is_ieee_positive_zero_real32 ( x ) result ( status ) real ( real32 ), intent ( in ) :: x status = ieee_class ( x ) . eq . ieee_positive_zero end function !> Checks whether `x` is `ieee_positive_zero` logical pure elemental function is_ieee_positive_zero_real64 ( x ) result ( status ) real ( real64 ), intent ( in ) :: x status = ieee_class ( x ) . eq . ieee_positive_zero end function !> Checks whether `x` is `ieee_positive_zero` logical pure elemental function is_ieee_positive_zero_real128 ( x ) result ( status ) real ( real128 ), intent ( in ) :: x status = ieee_class ( x ) . eq . ieee_positive_zero end function !> Checks whether `x` is `ieee_quiet_nan` logical pure elemental function is_ieee_quiet_nan_real32 ( x ) result ( status ) real ( real32 ), intent ( in ) :: x status = ieee_class ( x ) . eq . ieee_quiet_nan end function !> Checks whether `x` is `ieee_quiet_nan` logical pure elemental function is_ieee_quiet_nan_real64 ( x ) result ( status ) real ( real64 ), intent ( in ) :: x status = ieee_class ( x ) . eq . ieee_quiet_nan end function !> Checks whether `x` is `ieee_quiet_nan` logical pure elemental function is_ieee_quiet_nan_real128 ( x ) result ( status ) real ( real128 ), intent ( in ) :: x status = ieee_class ( x ) . eq . ieee_quiet_nan end function !> Checks whether `x` is `ieee_signaling_nan` logical pure elemental function is_ieee_signaling_nan_real32 ( x ) result ( status ) real ( real32 ), intent ( in ) :: x status = ieee_class ( x ) . eq . ieee_signaling_nan end function !> Checks whether `x` is `ieee_signaling_nan` logical pure elemental function is_ieee_signaling_nan_real64 ( x ) result ( status ) real ( real64 ), intent ( in ) :: x status = ieee_class ( x ) . eq . ieee_signaling_nan end function !> Checks whether `x` is `ieee_signaling_nan` logical pure elemental function is_ieee_signaling_nan_real128 ( x ) result ( status ) real ( real128 ), intent ( in ) :: x status = ieee_class ( x ) . eq . ieee_signaling_nan end function !> Substitute `ieee_negative_inf` to `x` using `ieee_value` pure elemental subroutine set_ieee_negative_inf_real32 ( x ) real ( real32 ), intent ( inout ) :: x x = ieee_value ( x = x , class = ieee_negative_inf ) end subroutine !> Substitute `ieee_negative_inf` to `x` using `ieee_value` pure elemental subroutine set_ieee_negative_inf_real64 ( x ) real ( real64 ), intent ( inout ) :: x x = ieee_value ( x = x , class = ieee_negative_inf ) end subroutine !> Substitute `ieee_negative_inf` to `x` using `ieee_value` pure elemental subroutine set_ieee_negative_inf_real128 ( x ) real ( real128 ), intent ( inout ) :: x x = ieee_value ( x = x , class = ieee_negative_inf ) end subroutine !> Substitute `ieee_negative_zero` to `x` using `ieee_value` pure elemental subroutine set_ieee_negative_zero_real32 ( x ) real ( real32 ), intent ( inout ) :: x x = ieee_value ( x = x , class = ieee_negative_zero ) end subroutine !> Substitute `ieee_negative_zero` to `x` using `ieee_value` pure elemental subroutine set_ieee_negative_zero_real64 ( x ) real ( real64 ), intent ( inout ) :: x x = ieee_value ( x = x , class = ieee_negative_zero ) end subroutine !> Substitute `ieee_negative_zero` to `x` using `ieee_value` pure elemental subroutine set_ieee_negative_zero_real128 ( x ) real ( real128 ), intent ( inout ) :: x x = ieee_value ( x = x , class = ieee_negative_zero ) end subroutine !> Substitute `ieee_positive_inf` to `x` using `ieee_value` pure elemental subroutine set_ieee_positive_inf_real32 ( x ) real ( real32 ), intent ( inout ) :: x x = ieee_value ( x = x , class = ieee_positive_inf ) end subroutine !> Substitute `ieee_positive_inf` to `x` using `ieee_value` pure elemental subroutine set_ieee_positive_inf_real64 ( x ) real ( real64 ), intent ( inout ) :: x x = ieee_value ( x = x , class = ieee_positive_inf ) end subroutine !> Substitute `ieee_positive_inf` to `x` using `ieee_value` pure elemental subroutine set_ieee_positive_inf_real128 ( x ) real ( real128 ), intent ( inout ) :: x x = ieee_value ( x = x , class = ieee_positive_inf ) end subroutine !> Substitute `ieee_positive_zero` to `x` using `ieee_value` pure elemental subroutine set_ieee_positive_zero_real32 ( x ) real ( real32 ), intent ( inout ) :: x x = ieee_value ( x = x , class = ieee_positive_zero ) end subroutine !> Substitute `ieee_positive_zero` to `x` using `ieee_value` pure elemental subroutine set_ieee_positive_zero_real64 ( x ) real ( real64 ), intent ( inout ) :: x x = ieee_value ( x = x , class = ieee_positive_zero ) end subroutine !> Substitute `ieee_positive_zero` to `x` using `ieee_value` pure elemental subroutine set_ieee_positive_zero_real128 ( x ) real ( real128 ), intent ( inout ) :: x x = ieee_value ( x = x , class = ieee_positive_zero ) end subroutine !> Substitute `ieee_quiet_nan` to `x` using `ieee_value` pure elemental subroutine set_ieee_quiet_nan_real32 ( x ) real ( real32 ), intent ( inout ) :: x x = ieee_value ( x = x , class = ieee_quiet_nan ) end subroutine !> Substitute `ieee_quiet_nan` to `x` using `ieee_value` pure elemental subroutine set_ieee_quiet_nan_real64 ( x ) real ( real64 ), intent ( inout ) :: x x = ieee_value ( x = x , class = ieee_quiet_nan ) end subroutine !> Substitute `ieee_quiet_nan` to `x` using `ieee_value` pure elemental subroutine set_ieee_quiet_nan_real128 ( x ) real ( real128 ), intent ( inout ) :: x x = ieee_value ( x = x , class = ieee_quiet_nan ) end subroutine !> Substitute `ieee_signaling_nan` to `x` using `ieee_value` pure elemental subroutine set_ieee_signaling_nan_real32 ( x ) real ( real32 ), intent ( inout ) :: x x = ieee_value ( x = x , class = ieee_signaling_nan ) end subroutine !> Substitute `ieee_signaling_nan` to `x` using `ieee_value` pure elemental subroutine set_ieee_signaling_nan_real64 ( x ) real ( real64 ), intent ( inout ) :: x x = ieee_value ( x = x , class = ieee_signaling_nan ) end subroutine !> Substitute `ieee_signaling_nan` to `x` using `ieee_value` pure elemental subroutine set_ieee_signaling_nan_real128 ( x ) real ( real128 ), intent ( inout ) :: x x = ieee_value ( x = x , class = ieee_signaling_nan ) end subroutine end module ieee_class_fortran","tags":"","url":"sourcefile/ieee_class_fortran.f90.html"}]}